<project-details>
    <h1>Project Detail <b>{state.title}</b></h1>
    <p if={ state.load_error } class="error">{ state.load_error }</p>
    <p>Here I describe who I am and what I do {props.params.slug} {props.params.action}</p>

    <script>
        import observable from '@riotjs/observable'
        var riot = require('riot')
        
        export default {
            state: {
                title: 'Project',
                activePage: null,
                load_error: null
            },
            async getProject(_slug) {
                const res = await fetch('/api/project?slug=' + _slug);
                if (res.status === 200) {
                    const data = await res.json();
                    riot.eventBus.trigger('activeProject', data) 
                    this.update({ title: data.name });
                } else if (res.status === 400) {
                    const error = await res.json();
                    this.update({ title: [], load_error: error.message });
                } else {
                    console.log("else")
                    this.update({ load_error: 'Error loading projects! status code: ' + res.status});
                }
            },
            async onBeforeMount(props, state) {
                await this.getProject(this.props.params.slug)
            },
            onMounted() {
                const activePageUpdate = (input) => {
                    const activePage = input
                    this.update({
                        activePage
                    })
                    if(typeof this.state.activePage.currentProjectAction !== "undefined"){
                        console.log('current Action: ' + this.state.activePage.currentProjectAction)
                    }
                }

                const getProject = (_slug) => {
                    this.getProject(_slug)
                }
                
                riot.eventBus.on('activePage', async function(_activePage) {  
                    if(typeof _activePage.currentProjectSlug !== 'undefined'){
                       await getProject(_activePage.currentProjectSlug);
                    }   
                    activePageUpdate(_activePage)

                })
            }
            
            
        }
    </script>
</project-details>