<project-navigation>
    <div class="row">
        <nav class="navigation menu">
            <section class="container">
                <a class="navigation-title active" href="/">Zusammenplayer</a>
                <a class="navigation-title active" href="{ props.ap.currentProjectPath }">{state.title}</a>
                <a
                    each={page in state.projectPages}
                    class="navigation-title {props.ap.currentProjectAction != null && props.ap.currentProjectAction === page.componentName ? 'active' : '' }"
                    href={props.ap.currentProjectPath}{page.path}>
                    {page.label}
                </a>
            </section>
        </nav>
    </div>

  <script>
    import projectPages from '../../../project-pages.js'
    import observable from '@riotjs/observable'
    var riot = require('riot')
    
    export default {
        state: {
            title: 'Project',
            projectPages,
            activeProject: '',
            activePage: null
        },
        onBeforeMount(){
            
        },
        onMounted() {
            const activePageUpdate = (input) => {
                const activePage = input
                this.update({
                    activePage
                })
                if(typeof this.state.activePage.currentProjectAction !== "undefined"){
                    console.log('current Action: ' + this.state.activePage.currentProjectAction)
                }
            }
            const activeProjectUpdate = (input) => {
                const activeProject = input
                this.update({
                    activeProject,
                    title: input.name
                })
            }
            
            riot.eventBus.on('activePage', function(input) {     
                activePageUpdate(input)
            })
            riot.eventBus.on('activeProject', function(input) {     
                activeProjectUpdate(input)
            })
            
            
            // const getProps = () => {
            //     return this.props
            // }
            // setTimeout(function(){
                
            //     let _props = getProps()
            //     titleUpdate(_props.ap.currentProjectSlug)
            // },5000)
        }
        
        
    }
  </script>
</project-navigation>