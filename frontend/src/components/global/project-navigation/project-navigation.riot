
<project-navigation>
    <style>
    
        button {
            float: right;
            vertical-align: middle;
            margin: 1em 0 1em 5px;
        }
        
    </style>
    <div class="row">
        <nav class="navigation menu">
            <section class="container">
                <a class="navigation-title active" href="/">Zusammenplayer</a>
                <a class="navigation-title active" href="{ props.ap.currentProjectPath }">{this.state.title}</a>
                <a
                    each={page in this.state.projectPages}
                    class="navigation-title {props.ap.currentProjectAction != null && props.ap.currentProjectAction === page.componentName ? 'active' : '' }"
                    href={props.ap.currentProjectPath}{page.path}>
                    {page.label}
                </a>
                <button class="button h1-button" onclick={(e) => save_project(e, props.ap.id)}>  save </button><button class="button-outline h1-button" onclick={(e) => revert_project(e, props.ap.slug)}>  revert</button>
            </section>
        </nav>
    </div>

  <script>
    import projectPages from '../../../project-pages.js'
    import observable from '@riotjs/observable'
    var riot = require('riot')
    
    export default {
        state: {
            title: 'Project',
            projectPages,
            activeProject: '',
            activePage: null
        },
        onBeforeMount(){
            this.state.activePage = this.props.ap;
        },
        onMounted() {
            const activePageUpdate = (input) => {
                const activePage = input
                this.update({
                    activePage
                })
                if(typeof this.state.activePage.currentProjectAction !== "undefined"){
                    console.log('current Action N: ' + this.state.activePage.currentProjectAction)
                }
            }
            const activeProjectUpdate = (input) => {
                const activeProject = input
                this.update({
                    activeProject,
                    title: input.name
                })
            }
            
            riot.eventBus.on('activePage', function(input) {     
                 activePageUpdate(input)
            })
            riot.eventBus.on('activeProject', function(input) {     
                activeProjectUpdate(input)
            })
            
        },
        revert_project(e){
            e.preventDefault();
            riot.eventBus.trigger('revert_project'); 
        },
        save_project(e){
            e.preventDefault();
            riot.eventBus.trigger('save_project'); 
        }
        
        
    }
  </script>
</project-navigation>